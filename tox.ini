[tox]
envlist = 
    py{311}-test-devdeps{,-cov}
    linkcheck
    codestyle
    pep517
    securityaudit

requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]
description = Run tests for mast-table
# Suppress display of matplotlib plots generated during docs build
setenv =
    MPLBACKEND=agg
    JUPYTER_PLATFORM_DIRS=1

# Pass through the following environment variables which may be needed for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# The following provides some specific pinnings for key packages
deps =
    # NOTE: Add/remove as needed
    pytest
    pytest-cov
    devdeps: astropy>=0.0.dev0
    devdeps: numpy>=0.0.dev0
    devdeps: git+https://github.com/astropy/astroquery.git
    devdeps: git+https://github.com/astropy/regions.git
    devdeps: git+https://github.com/jupyter-widgets/jupyterlab-sidecar.git
    devdeps: git+https://github.com/jupyter/jupyter.git
    devdeps: git+https://github.com/widgetti/solara.git

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test

commands =
    #jupyter --paths
    pip freeze
    !cov: pytest --pyargs mast_table {toxinidir}/docs
    cov: pytest --pyargs mast_table {toxinidir}/docs --cov mast_table --cov-config={toxinidir}/pyproject.toml
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 mast_table --count

[testenv:securityaudit]
skip_install = true
changedir = .
description = security audit with bandit
deps = bandit
commands = bandit -r mast_table -c .bandit.yaml

[testenv:pep517]
skip_install = true
changedir = .
description = PEP 517
deps =
    build
    twine
commands =
    python -m build --sdist .
    twine check dist/* --strict